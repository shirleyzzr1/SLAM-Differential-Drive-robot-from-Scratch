<launch>
  <!-- use_rviz and use_jsp arg to control wether to use rviz and jsp or not -->
  <arg name="use_rviz" default ="true" />
  <arg name="use_jsp" default="true" />

  <group if="$(arg use_rviz)">
    <!-- rviz will enable us to see the robot -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find nuturtle_description)/config/nuturtle.rviz"/>
  </group>

  <!-- load the four different robots -->
  <group ns="red">
    <!-- load the urdf into the parameter server -->
    <param name="robot_description" command="xacro '$(find nuturtle_description)/urdf/turtlebot3_burger.urdf.xacro' color:=red" />
	
    <!-- The robot_state_publisher reads the urdf from /robot_description parameter
       and listens to joint information on the /joint_states topic -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

    <group if="$(arg use_jsp)">
      <!-- The joint state publisher will be launched with a gui, read the urdf from /robot_description
	  and publish the joint values on /joint_states --> 
      <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui"/>
    </group>
    <!-- broadcast the transform from world frame to red/base_footprint frame -->
    <node pkg="tf" type="static_transform_publisher" name="red_broadcaster" args="1 0 0 0 0 0 1 world red/base_footprint 100"/>
    <rosparam file="$(find nuturtle_description)/config/diff_params.yaml" />
  </group>

  <group ns="green">
    <!-- load the urdf into the parameter server -->
    <param name="robot_description" command="xacro '$(find nuturtle_description)/urdf/turtlebot3_burger.urdf.xacro' color:=green" />
	
    <!-- The robot_state_publisher reads the urdf from /robot_description parameter
       and listens to joint information on the /joint_states topic -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

    <group if="$(arg use_jsp)">
      <!-- The joint state publisher will be launched with a gui, read the urdf from /robot_description
	  and publish the joint values on /joint_states --> 
      <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui"/>
    </group>
    <!-- broadcast the transform from world frame to green/base_footprint frame -->
    <node pkg="tf" type="static_transform_publisher" name="green_broadcaster" args="0 1 0 0 0 0 1 world green/base_footprint 100"/>
    <!-- load all the different params -->
    <rosparam file="$(find nuturtle_description)/config/diff_params.yaml" />
  </group>
  
  <group ns="blue">
    <!-- load the urdf into the parameter server -->
    <param name="robot_description" command="xacro '$(find nuturtle_description)/urdf/turtlebot3_burger.urdf.xacro' color:=blue" />
	
    <!-- The robot_state_publisher reads the urdf from /robot_description parameter
       and listens to joint information on the /joint_states topic -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

    <group if="$(arg use_jsp)">
      <!-- The joint state publisher will be launched with a gui, read the urdf from /robot_description
	  and publish the joint values on /joint_states --> 
      <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui"/>
    </group>
    <!-- broadcast the transform from world frame to blue/base_footprint frame -->
    <node pkg="tf" type="static_transform_publisher" name="blue_broadcaster" args="-1 0 0 0 0 0 1 world blue/base_footprint 100"/>
    <!-- load all the different params -->
    <rosparam file="$(find nuturtle_description)/config/diff_params.yaml" />
  </group>
  
  <group ns="black">
    <!-- load the urdf into the parameter server -->
    <param name="robot_description" command="xacro '$(find nuturtle_description)/urdf/turtlebot3_burger.urdf.xacro' color:=black" />
	
    <!-- The robot_state_publisher reads the urdf from /robot_description parameter
       and listens to joint information on the /joint_states topic -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

    <group if="$(arg use_jsp)">
      <!-- The joint state publisher will be launched with a gui, read the urdf from /robot_description
	  and publish the joint values on /joint_states --> 
      <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui"/>
    </group>
    <!-- broadcast the transform from world frame to black/base_footprint frame -->
    <node pkg="tf" type="static_transform_publisher" name="black_broadcaster" args="0 -1 0 0 0 0 1 world black/base_footprint 100"/>
    <!-- load all the different params -->
    <rosparam file="$(find nuturtle_description)/config/diff_params.yaml" />
  </group>
</launch>
